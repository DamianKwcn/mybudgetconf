server:
  port: ${SERVER_PORT}

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  application:
    name: ${SPRING_APPLICATION_NAME}
  config:
    import: ${CONFIG_SERVER_URI}
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      routes:
        - id: accounts
          uri: lb://ACCOUNTS
          predicates:
            - Path=/mybudget/accounts/**
          filters:
            - RewritePath=/mybudget/accounts/(?<s>.*), /${s}
            - name: CircuitBreaker
              args:
                name: accountsCircuitBreaker
                fallbackUri: forward:/contactSupport
                series:
                  - SERVER_ERROR
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 15
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, SERVICE_UNAVAILABLE
                methods: GET
                backoff:
                  firstBackoff: 100ms
                  maxBackoff: 1s
                  factor: 2

        - id: transactions
          uri: lb://TRANSACTIONS
          predicates:
            - Path=/mybudget/transactions/**
          filters:
            - RewritePath=/mybudget/transactions/(?<s>.*), /${s}
            - name: CircuitBreaker
              args:
                name: transactionsCircuitBreaker
                fallbackUri: forward:/contactSupport
                series:
                  - SERVER_ERROR
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 15
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, SERVICE_UNAVAILABLE
                methods: GET
                backoff:
                  firstBackoff: 100ms
                  maxBackoff: 1s
                  factor: 2

  data:
    redis:
      connect-timeout: ${REDIS_CONNECT_TIMEOUT}
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      timeout: ${REDIS_TIMEOUT}

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true

logging:
  level:
    com.mybudget.gatewayserver: DEBUG
    com.netflix.discovery: DEBUG
    com.mybudget.gateway.filter: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      slowCallDurationThreshold: 3s
      slowCallRateThreshold: 30
      waitDurationInOpenState: 15000

info:
  app:
    name: ${INFO_APP_NAME}
    description: ${INFO_APP_DESCRIPTION}
    version: ${INFO_APP_VERSION}
